# Copyright 2016 Dennis Vriend
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

include "general.conf"

jdbc-journal {
  class = "akka.persistence.jdbc.journal.JdbcAsyncWriteJournal"

  tables {
    journal {
      tableName = "journal"
      schemaName = ""
    }

    deletedTo {
      tableName = "deleted_to"
      schemaName = ""
    }
  }

  tagSeparator = ","

  serialization = on // alter only when using a custom dao

  dao = "akka.persistence.jdbc.dao.bytea.ByteArrayJournalDao"

  slick {
    driver = "slick.driver.MySQLDriver"
    db {
      host = "boot2docker"
      port = "3306"
      name = "mysql"

      url = "jdbc:mysql://boot2docker:3306/mysql?verifyServerCertificate=false&useSSL=false"
      user = "root"
      password = "root"
      driver = "com.mysql.jdbc.Driver"

      // hikariCP
      numThreads = 4 // number of cores
      maxConnections = 10 // 2 * numThreads + 1 (if running on an SSD)
      minConnections = 4  // same as numThreads

      connectionTestQuery = "SELECT 1"
    }
  }
}

# the akka-persistence-snapshot-store in use
jdbc-snapshot-store {
  class = "akka.persistence.jdbc.snapshot.JdbcSnapshotStore"

  tables {
    snapshot {
      tableName = "snapshot"
      schemaName = ""
    }
  }

  serialization = on // alter only when using a custom dao

  dao = "akka.persistence.jdbc.dao.bytea.ByteArraySnapshotDao"

  slick {
    driver = "slick.driver.MySQLDriver"
    db {
      host = "boot2docker"
      port = "3306"
      name = "mysql"

      url = "jdbc:mysql://boot2docker:3306/mysql?verifyServerCertificate=false&useSSL=false"
      user = "root"
      password = "root"
      driver = "com.mysql.jdbc.Driver"

      // hikariCP
      numThreads = 4 // number of cores
      maxConnections = 10 // 2 * numThreads + 1 (if running on an SSD)
      minConnections = 4  // same as numThreads

      connectionTestQuery = "SELECT 1"
    }
  }
}

# the akka-persistence-query provider in use
jdbc-read-journal {
  class = "akka.persistence.jdbc.query.JdbcReadJournalProvider"

  # New events are retrieved (polled) with this interval.
  refresh-interval = "1s"

  # How many events to fetch in one query (replay) and keep buffered until they
  # are delivered downstreams.
  max-buffer-size = "500"

  serialization = on // alter only when using a custom dao

  dao = "akka.persistence.jdbc.dao.bytea.ByteArrayReadJournalDao"

  tables {
    journal {
      tableName = "journal"
      schemaName = ""
    }
  }

  tagSeparator = ","

  slick {
    driver = "slick.driver.MySQLDriver"
    db {
      host = "boot2docker"
      port = "3306"
      name = "mysql"

      url = "jdbc:mysql://boot2docker:3306/mysql?verifyServerCertificate=false&useSSL=false"
      user = "root"
      password = "root"
      driver = "com.mysql.jdbc.Driver"

      // hikariCP
      numThreads = 4 // number of cores
      maxConnections = 10 // 2 * numThreads + 1 (if running on an SSD)
      minConnections = 4  // same as numThreads

      connectionTestQuery = "SELECT 1"
    }
  }
}
