akka {
  loglevel = debug
  log-config-on-start = off
  stdout-loglevel = debug

  #loggers = ["akka.event.slf4j.Slf4jLogger"]
//  event-handlers = ["akka.event.slf4j.Slf4jEventHandler"]
  #logging-filter = "akka.event.slf4j.Slf4jLoggingFilter"

  persistence {
    journal.plugin = "jdbc-journal"
    snapshot-store.plugin = "jdbc-snapshot-store"

    # we need event publishing for tests
    publish-confirmations = on
    publish-plugin-commands = on
  }

  log-dead-letters = 10
  log-dead-letters-during-shutdown = on
}

postgres {
  host = "boot2docker"
  port = "5432"
}

jdbc-connection {
  username           = "docker"
  password           = "docker"
  driverClassName    = "org.postgresql.Driver"
  url                = "jdbc:postgresql://"${postgres.host}":"${postgres.port}"/docker"
  journalSchemaName  = "public"
  journalTableName   = "journal"
  snapshotSchemaName = "public"
  snapshotTableName  = "snapshot"
}

# Global settings
scalikejdbc.global.loggingSQLAndTime.enabled=true
scalikejdbc.global.loggingSQLAndTime.logLevel=debug
scalikejdbc.global.loggingSQLAndTime.warningEnabled=true
scalikejdbc.global.loggingSQLAndTime.warningThresholdMillis=1000
scalikejdbc.global.loggingSQLAndTime.warningLogLevel=warn