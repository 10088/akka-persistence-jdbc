# Copyright 2016 Dennis Vriend
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

include "general.conf"

akka.loglevel = DEBUG

akka.actor {
  serialize-messages = on
  warn-about-java-serializer-usage = on

  serializers {
    base64Serializer = "akka.persistence.jdbc.serialization.Base64Serializer"
  }

  serialization-identifiers {
    "akka.persistence.jdbc.serialization.Base64Serializer" = 1000
  }
}

akka-persistence-jdbc {
  slick {
    driver = "slick.driver.MySQLDriver"
    db {
      host = "boot2docker"
      host = ${?MYSQL_HOST}
      port = "3306"
      port = ${?MYSQL_PORT}
      name = "mysql"

      url = "jdbc:mysql://"${akka-persistence-jdbc.slick.db.host}":"${akka-persistence-jdbc.slick.db.port}"/"${akka-persistence-jdbc.slick.db.name}"?verifyServerCertificate=false&useSSL=false"
      user = "root"
      password = "root"
      driver = "com.mysql.jdbc.Driver"

      // hikariCP
      numThreads = 4 // number of cores
      maxConnections = 10 // 2 * numThreads + 1 (if running on an SSD)
      minConnections = 4  // same as numThreads

      connectionTestQuery = "SELECT 1"
    }
  }

  tables {
    journal {
      tableName = "journal"
      schemaName = ""
    }

    deletedTo {
      tableName = "deleted_to"
      schemaName = ""
    }

    snapshot {
      tableName = "snapshot"
      schemaName = ""
    }
  }

  dao {
    journal = "akka.persistence.jdbc.dao.varchar.VarcharJournalDao"
    snapshot = "akka.persistence.jdbc.dao.varchar.VarcharSnapshotDao"
  }

  serialization.varchar.serializerIdentity = 1000
}
